
<%- include('partials/header') %>
<%- include('partials/navbar') %>

<div class="container mt-5 pt-3">
    <div class="row mb-4">
        <div class="col-md-8">
            <h1><i class="fas fa-tachometer-alt me-2"></i>Dashboard</h1>
            <p class="lead">View and manage upcoming scheduled jobs</p>
        </div>
        <div class="col-md-4 text-end">
            <a href="/add-job" class="btn btn-primary me-2">
                <i class="fas fa-plus-circle me-1"></i> Add New Job
            </a>
            <a href="/delete-all-jobs" class="btn btn-danger">
                <i class="fas fa-trash-alt me-1"></i> Delete All Jobs
            </a>
        </div>
    </div>

    
    <div class="row mb-4">
        <div class="col-12">
            <div id="job-messages" class="card">
                <div class="card-header">
                    <i class="fas fa-bell me-1"></i> Job Execution Updates
                </div>
                <div class="card-body" style="max-height: 200px; overflow-y: auto;">
                 
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card bg-primary text-white mb-4">
                <div class="card-body">
                    <h5><i class="fas fa-tasks me-2"></i>Total Jobs</h5>
                    <h2 id="totalJobs"><%= jobs.length %></h2>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-success text-white mb-4">
                <div class="card-body">
                    <h5><i class="fas fa-clock me-2"></i>One-time Jobs</h5>
                    <h2 id="oneTimeJobs"><%= jobs.filter(job => job.type === 'one-time').length %></h2>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-info text-white mb-4">
                <div class="card-body">
                    <h5><i class="fas fa-sync me-2"></i>Recurring Jobs</h5>
                    <h2 id="recurringJobs"><%= jobs.filter(job => job.type === 'recurring').length %></h2>
                </div>
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            Upcoming Jobs
        </div>
        <div class="card-body">
            <% if (jobs.length > 0) { %>
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Type</th>
                                <th>Execution Time</th>
                                <th>Command</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% jobs.forEach(job => { %>
                                <tr>
                                    <td><%= job.name %></td>
                                    <td>
                                        <% if (job.type === 'one-time') { %>
                                            <span class="badge bg-success">One-time</span>
                                        <% } else { %>
                                            <span class="badge bg-info">Recurring</span>
                                            <small class="d-block mt-1">Every <%= job.interval %> sec</small>
                                        <% } %>
                                    </td>
                                    <td>
                                        <%= new Date(job.timestamp * 1000).toLocaleString() %>
                                        <small class="d-block text-muted">
                                            <% 
                                                const timeLeft = job.timestamp - currentTime;
                                                const minutes = Math.floor(timeLeft / 60);
                                                const seconds = timeLeft % 60;
                                            %>
                                            <%= minutes > 0 ? `${minutes}m ` : '' %><%= seconds %>s from now
                                        </small>
                                    </td>
                                    <td><code><%= job.payload.command %></code></td>
                                    <td>
                                        <button class="btn btn-sm btn-danger remove-job" 
                                                data-name="<%= job.name %>" 
                                                data-timestamp="<%= job.timestamp %>">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            <% } else { %>
                <div class="alert alert-info">
                    No upcoming jobs scheduled. <a href="/add-job">Add a new job</a> to get started.
                </div>
            <% } %>
        </div>
    </div>
</div>

<%- include('partials/footer') %>


<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    const messagesDiv = document.getElementById('job-messages').querySelector('.card-body');

    socket.on('job-result', (data) => {
        console.log('Job result, bro:', data);
        const message = document.createElement('p');
        message.className = data.success ? 'text-success mb-1' : 'text-danger mb-1';
        message.textContent = `Job "${data.name}" (Command: ${data.command}) - ${data.success ? 'Successfully executed!' : 'Error, try again!'}: ${data.message}`;
        messagesDiv.insertBefore(message, messagesDiv.firstChild);

        if (data.success== true 
        || data.success==false) {
            const alert = document.createElement('div');
            alert.className = `alert ${data.success ? 'alert-success' : 'alert-danger'} mt-3`;
            alert.innerHTML = `<strong>${data.success ? 'Success!' : 'Error!'}</strong> Job "${data.name}" has been ${data.success ? 'successfully executed' : 'failed to execute'}.`;
            messagesDiv.appendChild(alert);
            messagesDiv.scrollTop = messagesDiv.scrollHeight; // Scroll to the bottom
            // Redirect to the dashboard after 5 seco
            setTimeout(() => {
                window.location.href = '/';
            }, 5000);
        }
    });

    
    document.querySelectorAll('.remove-job').forEach(button => {
        button.addEventListener('click', () => {
            const name = button.dataset.name;
            const timestamp = button.dataset.timestamp;
            if (confirm(`Remove job "${name}"?`)) {
                fetch('/api/remove-job', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: `name=${encodeURIComponent(name)}&timestamp=${encodeURIComponent(timestamp)}` // Fixed typo
                }).then(() => location.reload());
            }
        });
    });
</script>