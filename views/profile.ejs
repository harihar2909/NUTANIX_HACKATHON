<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Profile | Job Scheduler</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
    <style>
        .profile-header {
            background-color: #f8f9fa;
            padding: 30px 0;
            margin-bottom: 30px;
            border-bottom: 1px solid #dee2e6;
        }
        .profile-jobs {
            margin-top: 30px;
        }
        .action-buttons {
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <%- include('partials/navbar') %>
    
    <div class="profile-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="mb-2"><%= user.name %></h1>
                    <p class="text-muted mb-0"><%= user.email %></p>
                </div>
                <div class="col-md-4 text-md-end">
                    <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#editProfileModal">
                        Edit Profile
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <div class="container profile-jobs">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2>My Job Listings</h2>
                    <a href="/jobs/new" class="btn btn-primary">Post New Job</a>
                </div>
                
                <% if (jobs && jobs.length > 0) { %>
                    <div class="list-group">
                        <% jobs.forEach(job => { %>
                            <div class="list-group-item list-group-item-action">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1"><%= job.title %></h5>
                                    <small><%= new Date(job.createdAt).toLocaleDateString() %></small>
                                </div>
                                <p class="mb-1"><%= job.company %> - <%= job.location %></p>
                                <small class="text-muted">
                                    <%= job.type %> â€¢ 
                                    <% if (job.isActive) { %>
                                        <span class="badge bg-success">Active</span>
                                    <% } else { %>
                                        <span class="badge bg-secondary">Inactive</span>
                                    <% } %>
                                </small>
                                <div class="mt-2">
                                    <a href="/jobs/<%= job._id %>" class="btn btn-sm btn-outline-primary">View</a>
                                    <a href="/jobs/<%= job._id %>/edit" class="btn btn-sm btn-outline-secondary">Edit</a>
                                    <button class="btn btn-sm btn-outline-danger delete-job-btn" data-job-id="<%= job._id %>">Delete</button>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                <% } else { %>
                    <div class="alert alert-info">
                        <p class="mb-0">You haven't posted any jobs yet. <a href="/jobs/new">Post your first job</a>.</p>
                    </div>
                <% } %>
                
                <div class="action-buttons">
                    <hr>
                    <h4>Account Settings</h4>
                    <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#changePasswordModal">
                        Change Password
                    </button>
                    <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteAccountModal">
                        Delete Account
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Edit Profile Modal -->
    <div class="modal fade" id="editProfileModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Profile</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="edit-profile-alert" class="alert alert-danger" style="display: none;"></div>
                    <form id="edit-profile-form">
                        <div class="mb-3">
                            <label for="name" class="form-label">Name</label>
                            <input type="text" class="form-control" id="name" value="<%= user.name %>" required>
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">Email address</label>
                            <input type="email" class="form-control" id="email" value="<%= user.email %>" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="save-profile-btn">Save Changes</button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Change Password Modal -->
    <div class="modal fade" id="changePasswordModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Change Password</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="change-password-alert" class="alert alert-danger" style="display: none;"></div>
                    <form id="change-password-form">
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">Current Password</label>
                            <input type="password" class="form-control" id="currentPassword" required>
                        </div>
                        <div class="mb-3">
                            <label for="newPassword" class="form-label">New Password</label>
                            <input type="password" class="form-control" id="newPassword" required>
                            <div class="form-text">Password must be at least 6 characters long.</div>
                        </div>
                        <div class="mb-3">
                            <label for="confirmNewPassword" class="form-label">Confirm New Password</label>
                            <input type="password" class="form-control" id="confirmNewPassword" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="change-password-btn">Update Password</button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Delete Account Modal -->
    <div class="modal fade" id="deleteAccountModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete Account</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger">
                        <strong>Warning!</strong> This action cannot be undone. All your data, including job listings, will be permanently deleted.
                    </div>
                    <p>Please type <strong>DELETE</strong> to confirm:</p>
                    <input type="text" class="form-control" id="deleteConfirmation">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="delete-account-btn" disabled>Delete My Account</button>
                </div>
            </div>
        </div>
    </div>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        // Edit Profile
        document.getElementById('save-profile-btn').addEventListener('click', async function() {
            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const alertEl = document.getElementById('edit-profile-alert');
            
            try {
                const response = await fetch('/api/users/me', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name, email })
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    // Refresh page to show updated info
                    window.location.reload();
                } else {
                    alertEl.textContent = data.message || 'Failed to update profile';
                    alertEl.style.display = 'block';
                }
            } catch (error) {
                console.error('Update profile error:', error);
                alertEl.textContent = 'An error occurred. Please try again.';
                alertEl.style.display = 'block';
            }
        });
        
        // Change Password
        document.getElementById('change-password-btn').addEventListener('click', async function() {
            const currentPassword = document.getElementById('currentPassword').value;
            const newPassword = document.getElementById('newPassword').value;
            const confirmNewPassword = document.getElementById('confirmNewPassword').value;
            const alertEl = document.getElementById('change-password-alert');
            
            // Validate passwords
            if (newPassword.length < 6) {
                alertEl.textContent = 'Password must be at least 6 characters long';
                alertEl.style.display = 'block';
                return;
            }
            
            if (newPassword !== confirmNewPassword) {
                alertEl.textContent = 'Passwords do not match';
                alertEl.style.display = 'block';
                return;
            }
            
            try {
                const response = await fetch('/api/users/password', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ currentPassword, newPassword })
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    // Close modal and show success
                    const modal = bootstrap.Modal.getInstance(document.getElementById('changePasswordModal'));
                    modal.hide();
                    alert('Password updated successfully');
                } else {
                    alertEl.textContent = data.message || 'Failed to update password';
                    alertEl.style.display = 'block';
                }
            } catch (error) {
                console.error('Change password error:', error);
                alertEl.textContent = 'An error occurred. Please try again.';
                alertEl.style.display = 'block';
            }
        });
        
        // Delete Account - Enable button when DELETE is typed
        document.getElementById('deleteConfirmation').addEventListener('input', function() {
            const deleteBtn = document.getElementById('delete-account-btn');
            deleteBtn.disabled = this.value !== 'DELETE';
        });
        
        // Delete Account
        document.getElementById('delete-account-btn').addEventListener('click', async function() {
            if (document.getElementById('deleteConfirmation').value !== 'DELETE') {
                return;
            }
            
            try {
                const response = await fetch('/api/users/me', {
                    method: 'DELETE'
                });
                
                if (response.ok) {
                    // Redirect to home page
                    window.location.href = '/?deleted=true';
                } else {
                    const data = await response.json();
                    alert(data.message || 'Failed to delete account');
                }
            } catch (error) {
                console.error('Delete account error:', error);
                alert('An error occurred. Please try again.');
            }
        });
        
        // Delete Job
        document.querySelectorAll('.delete-job-btn').forEach(button => {
            button.addEventListener('click', async function() {
                const jobId = this.getAttribute('data-job-id');
                
                if (confirm('Are you sure you want to delete this job listing? This action cannot be undone.')) {
                    try {
                        const response = await fetch(`/api/jobs/${jobId}`, {
                            method: 'DELETE'
                        });
                        
                        if (response.ok) {
                            // Remove job from UI
                            this.closest('.list-group-item').remove();
                            
                            // If no more jobs, show the "no jobs" message
                            if (document.querySelectorAll('.list-group-item').length === 0) {
                                const noJobsAlert = document.createElement('div');
                                noJobsAlert.className = 'alert alert-info';
                                noJobsAlert.innerHTML = '<p class="mb-0">You haven\'t posted any jobs yet. <a href="/jobs/new">Post your first job</a>.</p>';
                                document.querySelector('.list-group').replaceWith(noJobsAlert);
                            }
                        } else {
                            const data = await response.json();
                            alert(data.message || 'Failed to delete job');
                        }
                    } catch (error) {
                        console.error('Delete job error:', error);
                        alert('An error occurred. Please try again.');
                    }
                }
            });
        });
    </script>
</body>
</html>